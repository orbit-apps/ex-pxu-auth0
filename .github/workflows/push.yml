on: push
name: Continuous Integration
jobs:
  test:
    runs-on: ubuntu-latest

    env:
      MIX_ENV: test
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Cache dialyzer plts
        uses: actions/cache@v4.0.1
        with:
          path: priv/plts
          key: ${{runner.os}}-${{matrix.otp}}-${{matrix.elixir}}-plts

      - name: Setup elixir
        uses: erlef/setup-beam@v1
        with:
          version-file: ".tool-versions"
          version-type: "strict"

      - name: Deps get
        run: mix deps.get
      - name: Check Credo
        run: mix credo --strict
      - name: Check Formatting
        run: mix format --check-formatted
      - name: Newline linter
        run: |
          set -e; \
          code=0; \
          for f in $( find . -type f \( -iname '*.ex' -o -iname '*.eex' -o -iname '*.exs' \) | grep -v "^./deps/" ); do \
              if [ "$(tail -c 1 $f)" != "$(printf '\n')" ]; then \
                  echo "$f does not end with a newline"; \
                  code=1; \
              fi; \
          done; \
          exit $code
      - name: Multi newline linter
        run: |
          set -e; \
          code=0; \
          for f in $( find . -type f \( -iname '*.ex' -o -iname '*.eex' -o -iname '*.exs' \) | grep -v "^./deps/" ); do \
              if [ "$(tail -c 2 $f)" == "$(printf '\n\n')" ]; then \
                  echo "$f has trailing newlines"; \
                  code=1; \
              fi; \
          done; \
          exit $code
      - name: Run Tests
        run: mix do compile --warnings-as-errors, test
      - name: Dialyzer
        run: mix dialyzer
